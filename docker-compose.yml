version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                user: laravel
                uid: 1000
        container_name: laravel_app
        restart: unless-stopped
        tty: true
        working_dir: /var/www/html
        command: bash -c "chmod 777 /var/run && cron -f & php-fpm"
        volumes:
            - ./:/var/www/html
            - ./docker/cron:/etc/cron.d
        networks:
            - wallex_network
        depends_on:
            - redis

    webserver:
        image: nginx:alpine
        container_name: nginx_server
        restart: unless-stopped
        tty: true
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - wallex_network
        depends_on:
            - app
            - db

    db:
        image: mysql:8.0
        container_name: mysql_db
        restart: unless-stopped
        tty: true
        ports:
            - "13306:3306"
        environment:
            MYSQL_DATABASE: wallex
            MYSQL_USER: wallex
            MYSQL_PASSWORD: wallex
            MYSQL_ROOT_PASSWORD: toor
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - wallex_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: unless-stopped
        tty: true
        ports:
            - "8081:80"
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: secret
        networks:
            - wallex_network
        depends_on:
            - db

    redis:
        image: redis:alpine
        container_name: redis_server
        restart: unless-stopped
        volumes:
            - redisdata:/data
        networks:
            - wallex_network

    redisinsight:
        image: redis/redisinsight:latest
        container_name: redisinsight
        restart: unless-stopped
        ports:
            - "8082:5540"  # UI: http://localhost:8082
        networks:
            - wallex_network
        depends_on:
            - redis

volumes:
    dbdata:
        driver: local
    redisdata:
        driver: local

networks:
    wallex_network:
        driver: bridge
